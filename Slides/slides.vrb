\frametitle{Defining the Optimization Function}
\begin{block}{Sharpe Ratio Optimization}
        \scriptsize
        \begin{verbatim}
# Define the objective function to minimize
def sharpe_ratio(weights, returns, risk_free_rate=0.03):
    portfolio_return = np.sum(returns.mean() * weights) * 252
    portfolio_stddev = np.sqrt(np.dot(weights.T,
                                      np.dot(returns.cov() * 252, weights)))
    return - (portfolio_return - risk_free_rate) / portfolio_stddev

# Initial guess for weights
num_assets = len(tickers)
init_guess = num_assets * [1. / num_assets,]

# Constraints and bounds
constraints = ({'type': 'eq', 'fun': lambda weights: np.sum(weights) - 1})
bounds = tuple((0, 1) for asset in range(num_assets))

# Optimize
opt_results = minimize(sharpe_ratio, init_guess,
                       args=(returns,), method='SLSQP', bounds=bounds,
                       constraints=constraints)
        \end{verbatim}
    \end{block}
